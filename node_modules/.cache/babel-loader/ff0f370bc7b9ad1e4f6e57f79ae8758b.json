{"ast":null,"code":"import { createStore } from \"redux\";\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\";\n\nconst addToDo = text => {\n  return {\n    type: ADD,\n    text\n  };\n};\n\nconst deleteToDo = id => {\n  return {\n    type: DELETE,\n    id\n  };\n};\n\nconst reducer = (state = [\"dd\"], action) => {\n  switch (action.type) {\n    case ADD:\n      return [{\n        text: action.text,\n        id: Date.now()\n      }, ...state];\n\n    case DELETE:\n      return state.filter(toDo => toDo !== action.id);\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nexport const actionCreators = {\n  addToDo,\n  deleteToDo\n};\nexport default store;","map":{"version":3,"sources":["/Users/jin.come.up/Desktop/react-redux/src/store.js"],"names":["createStore","ADD","DELETE","addToDo","text","type","deleteToDo","id","reducer","state","action","Date","now","filter","toDo","store","actionCreators"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAG,KAAZ;AACA,MAAMC,MAAM,GAAG,QAAf;;AAEA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAEJ,GADD;AAELG,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAME,UAAU,GAAIC,EAAD,IAAQ;AACzB,SAAO;AACLF,IAAAA,IAAI,EAAEH,MADD;AAELK,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,CAAC,IAAD,CAAT,EAAiBC,MAAjB,KAA4B;AAC1C,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKJ,GAAL;AACE,aAAO,CAAC;AAAEG,QAAAA,IAAI,EAAEM,MAAM,CAACN,IAAf;AAAqBG,QAAAA,EAAE,EAAEI,IAAI,CAACC,GAAL;AAAzB,OAAD,EAAwC,GAAGH,KAA3C,CAAP;;AACF,SAAKP,MAAL;AACE,aAAOO,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,KAAKJ,MAAM,CAACH,EAAvC,CAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMM,KAAK,GAAGf,WAAW,CAACQ,OAAD,CAAzB;AAEA,OAAO,MAAMQ,cAAc,GAAG;AAC5Bb,EAAAA,OAD4B;AAE5BG,EAAAA;AAF4B,CAAvB;AAKP,eAAeS,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nconst ADD = \"ADD\";\nconst DELETE = \"DELETE\";\n\nconst addToDo = (text) => {\n  return {\n    type: ADD,\n    text,\n  };\n};\n\nconst deleteToDo = (id) => {\n  return {\n    type: DELETE,\n    id,\n  };\n};\n\nconst reducer = (state = [\"dd\"], action) => {\n  switch (action.type) {\n    case ADD:\n      return [{ text: action.text, id: Date.now() }, ...state];\n    case DELETE:\n      return state.filter((toDo) => toDo !== action.id);\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nexport const actionCreators = {\n  addToDo,\n  deleteToDo,\n};\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}